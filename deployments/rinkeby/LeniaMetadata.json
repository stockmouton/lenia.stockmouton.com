{
  "address": "0x31AA397E8dD75b76173De20F36241153F9EF22c7",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "leniaParameters",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "metadataAddress",
          "type": "bytes"
        }
      ],
      "name": "setLeniaParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9eb241ce11152b312b66ffb802140bd8812e2110da65d99285c2201e76453b87",
  "receipt": {
    "to": null,
    "from": "0xdD11751cdD3f6EFf01B1f6151B640685bfa5dB4a",
    "contractAddress": "0x31AA397E8dD75b76173De20F36241153F9EF22c7",
    "transactionIndex": 52,
    "gasUsed": "523362",
    "logsBloom": "0x
    "blockHash": "0x051ec50eb52bdeab78af66274dae4ed43265d34a5e695bda2415824594b32817",
    "transactionHash": "0x9eb241ce11152b312b66ffb802140bd8812e2110da65d99285c2201e76453b87",
    "logs": [
      {
        "transactionIndex": 52,
        "blockNumber": 9531600,
        "transactionHash": "0x9eb241ce11152b312b66ffb802140bd8812e2110da65d99285c2201e76453b87",
        "address": "0x31AA397E8dD75b76173De20F36241153F9EF22c7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dd11751cdd3f6eff01b1f6151b640685bfa5db4a"
        ],
        "data": "0x",
        "logIndex": 110,
        "blockHash": "0x051ec50eb52bdeab78af66274dae4ed43265d34a5e695bda2415824594b32817"
      }
    ],
    "blockNumber": 9531600,
    "cumulativeGasUsed": "10258722",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "b7a1d0402556e00e420e1480521d0575",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leniaParameters\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"metadataAddress\",\"type\":\"bytes\"}],\"name\":\"setLeniaParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LeniaMetadata.sol\":\"LeniaMetadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/LeniaMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// @title Metadata contract for the Lenia collection\\n\\n/**********************************************\\n *                        .                   *\\n *                          ,,                *\\n *                      ......*#*             *\\n *                 .......    ..*%%,          *\\n *          .,,****,..             ,#(.       *\\n *         .,**((((*,.               .*(.     *\\n *          .**((**,,,,,,,             .*,    *\\n *        .......,,**(((((((*.          .,,   *\\n *       ...      ,*((##%&&&&@&(,        .,.  *\\n *       ..        ,((#&&@@@@@@@@&(*.  ..,,.  *\\n *    ,. ..          ,#&@@@@@@@@@@@%#(*,,,,.  *\\n *      ((,.           *%@@@@&%%%&&%#(((*,,.  *\\n *        (&*            *%@@@&&%%##(((**,.   *\\n *          (&(           .*(#%%##(((**,,.    *\\n *            .((,         .,*(((((**,..      *\\n *               .,*,,.....,,,,*,,,..         *\\n *                    ..........              *\\n**********************************************/\\n\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract LeniaMetadata is Ownable {\\n    uint256 public constant MAX_SUPPLY = 202;\\n\\n    bytes[MAX_SUPPLY] public leniaParameters;\\n    \\n    function setLeniaParams(uint256 id, bytes memory metadataAddress) public onlyOwner {\\n        require(id < MAX_SUPPLY, \\\"id out of bounds\\\");\\n\\n        leniaParameters[id] = metadataAddress;\\n    }\\n}\",\"keccak256\":\"0xce44cd4b6ea3e5cbbdab2d7f469cc783252f5957a2de39bb9f9c8de9b33c4a26\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61081c8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100af578063b404347d146100d7578063f2fde38b146100f757600080fd5b806332cb6b0c14610077578063715018a6146100925780638581a50d1461009c575b600080fd5b61007f60ca81565b6040519081526020015b60405180910390f35b61009a61010a565b005b61009a6100aa3660046105e8565b61019c565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b6100ea6100e53660046105cf565b6102b4565b60405161008991906106c1565b61009a610105366004610592565b610354565b60005473ffffffffffffffffffffffffffffffffffffffff163314610190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61019a6000610484565b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610187565b60ca8210610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6964206f7574206f6620626f756e6473000000000000000000000000000000006044820152606401610187565b8060018360ca811061029b5761029b610788565b0190805190602001906102af9291906104f9565b505050565b60018160ca81106102c457600080fd5b0180549091506102d390610734565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff90610734565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b505050505081565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610187565b73ffffffffffffffffffffffffffffffffffffffff8116610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610187565b61048181610484565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461050590610734565b90600052602060002090601f016020900481019282610527576000855561056d565b82601f1061054057805160ff191683800117855561056d565b8280016001018555821561056d579182015b8281111561056d578251825591602001919060010190610552565b5061057992915061057d565b5090565b5b80821115610579576000815560010161057e565b6000602082840312156105a457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105c857600080fd5b9392505050565b6000602082840312156105e157600080fd5b5035919050565b600080604083850312156105fb57600080fd5b82359150602083013567ffffffffffffffff8082111561061a57600080fd5b818501915085601f83011261062e57600080fd5b813581811115610640576106406107b7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610686576106866107b7565b8160405282815288602084870101111561069f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600060208083528351808285015260005b818110156106ee578581018301518582016040015282016106d2565b81811115610700576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061074857607f821691505b60208210811415610782577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212207fa29d58acd8fffe4359e8bca837743a6a2059a91c023de4257b37dd8cd3c3e064736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100af578063b404347d146100d7578063f2fde38b146100f757600080fd5b806332cb6b0c14610077578063715018a6146100925780638581a50d1461009c575b600080fd5b61007f60ca81565b6040519081526020015b60405180910390f35b61009a61010a565b005b61009a6100aa3660046105e8565b61019c565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610089565b6100ea6100e53660046105cf565b6102b4565b60405161008991906106c1565b61009a610105366004610592565b610354565b60005473ffffffffffffffffffffffffffffffffffffffff163314610190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61019a6000610484565b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610187565b60ca8210610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6964206f7574206f6620626f756e6473000000000000000000000000000000006044820152606401610187565b8060018360ca811061029b5761029b610788565b0190805190602001906102af9291906104f9565b505050565b60018160ca81106102c457600080fd5b0180549091506102d390610734565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff90610734565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b505050505081565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610187565b73ffffffffffffffffffffffffffffffffffffffff8116610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610187565b61048181610484565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461050590610734565b90600052602060002090601f016020900481019282610527576000855561056d565b82601f1061054057805160ff191683800117855561056d565b8280016001018555821561056d579182015b8281111561056d578251825591602001919060010190610552565b5061057992915061057d565b5090565b5b80821115610579576000815560010161057e565b6000602082840312156105a457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105c857600080fd5b9392505050565b6000602082840312156105e157600080fd5b5035919050565b600080604083850312156105fb57600080fd5b82359150602083013567ffffffffffffffff8082111561061a57600080fd5b818501915085601f83011261062e57600080fd5b813581811115610640576106406107b7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610686576106866107b7565b8160405282815288602084870101111561069f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600060208083528351808285015260005b818110156106ee578581018301518582016040015282016106d2565b81811115610700576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061074857607f821691505b60208210811415610782577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212207fa29d58acd8fffe4359e8bca837743a6a2059a91c023de4257b37dd8cd3c3e064736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/LeniaMetadata.sol:LeniaMetadata",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3373,
        "contract": "contracts/LeniaMetadata.sol:LeniaMetadata",
        "label": "leniaParameters",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_bytes_storage)202_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes_storage)202_storage": {
        "base": "t_bytes_storage",
        "encoding": "inplace",
        "label": "bytes[202]",
        "numberOfBytes": "6464"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      }
    }
  }
}